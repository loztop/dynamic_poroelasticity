test(2);




for (unsigned int ns=0; ns<side->n_nodes(); ns++)
    {
     for (unsigned int n=0; n<elem->n_nodes(); n++){
        Node *node = elem->get_node(n);
	     Point p;
	for (unsigned int d = 0; d < 3; ++d) {
      	unsigned int source_dof = node->dof_number(1, d, 0);
      	Real value = aux_system.current_local_solution->el(source_dof);
      	p(d)=value;
   	}
    
//Apply Dirichlet Bcs properly



  if ((elem->node(n) == side->node(ns))  )
  {

    
if ((elem->node(n) == side->node(ns)) && (p(0)>0.999)  )
    {
      unsigned int source_dof = node->dof_number(system.number(), 0, 0);
       Real value = 0;
       rows.push_back(source_dof);
       system.rhs->set(source_dof,value);
    }  //end if
    

if ((elem->node(n) == side->node(ns)) && ( (p(1)<0.01)  || (p(1)>0.99))  )
    {

       unsigned int source_dof = node->dof_number(system.number(), 1, 0);
       Real value = 0;
       rows.push_back(source_dof);
       system.rhs->set(source_dof,value);
     

    }  //end if
/*
if ((elem->node(n) == side->node(ns)) && ((p(2)<0.01)  || (p(2)>0.99))  )
    {


      unsigned int source_dof = node->dof_number(system.number(), 2, 0);
       Real value = 0;
       rows.push_back(source_dof);
      system.rhs->set(source_dof,value);

    

    }  //end if
    
    
*/

    





//Pin pressure at top to zero
/*
    if ((elem->node(n) == side->node(ns)) && (p(0)>0.999 ) )
    {
       unsigned int source_dof = node->dof_number(system.number(), 3, 0);
       if (source_dof <12345678){ //The pressures do not exist everywhere// This is a hack !!
       Real value = 0;
       pressure_rows.push_back(source_dof);
      system.rhs->set(source_dof,value);
     }
    }  //end if

*/




} //((elem->node(n) == side->node(ns))  )

} // end nodes on side loop

}//for loop
  
